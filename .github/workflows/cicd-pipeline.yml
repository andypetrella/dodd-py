# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:

    runs-on: ubuntu-latest
    env:
      KENSU_URL: "${{ secrets.KENSU_URL }}"
      KENSU_TOKEN: "${{ secrets.KENSU_TOKEN }}"
      # No SDK on "Local" test (for now)
      # KENSU_SDK_URL: "${{ secrets.KENSU_SDK_URL }}"
      # KENSU_SDK_PAT: "${{ secrets.KENSU_SDK_PAT }}"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=src
        pytest --exitfirst --verbose --failed-first

  DeployStaging:
    name: Deploy to Staging 
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Staging
    env:
      # ENV duplicates the environment.name... as it is not clear how to get the environment from a context...
      ENV: "Staging" 
      KENSU_URL: "${{ secrets.KENSU_URL }}"
      KENSU_TOKEN: "${{ secrets.KENSU_TOKEN }}"
      KENSU_SDK_URL: "${{ secrets.KENSU_SDK_URL }}"
      KENSU_SDK_PAT: "${{ secrets.KENSU_SDK_PAT }}"
    steps:
      - name: Deploy
        run: echo I am deploying Dev! 
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          export PYTHONPATH=src
          pytest --exitfirst --verbose --failed-first

  DeployProd:
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: Production
    env:
      # ENV duplicates the environment.name... as it is not clear how to get the environment from a context...
      ENV: "Production" 
      KENSU_URL: "${{ secrets.KENSU_URL }}"
      KENSU_TOKEN: "${{ secrets.KENSU_TOKEN }}"
      KENSU_SDK_URL: "${{ secrets.KENSU_SDK_URL }}"
      KENSU_SDK_PAT: "${{ secrets.KENSU_SDK_PAT }}"
    steps:
      - name: Deploy
        run: echo I am deploying Prod! 
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Simulating one run
        run: |
          cd src 
          python build_data.py
